# The issuer in the generated API tokens and the address of the GDPR API Tester
#   e.g. http://127.0.0.1:8888/
#   The API must have connectivity to this address because the JWT token
#   verification will fetch the public key from here.
ISSUER=http://127.0.0.1:8888/

# The type of the issuer (authorizaton server) that the GDPR API Tester simulates.
# Allowed values are "tunnistamo" and "keycloak".
ISSUER_TYPE=keycloak

# The audience in the generated API tokens and the client id of the GDPR API
#   e.g. http://localhost:8080/exampleapi
GDPR_API_AUDIENCE=http://localhost:8080/exampleapi

# The field in the API tokens that contains the API scopes
#   e.g. http://localhost:8080
GDPR_API_AUTHORIZATION_FIELD=http://localhost:8080

# The GDPR query scope
#   e.g. exampleapi.gdprquery
GDPR_API_QUERY_SCOPE=exampleapi.gdprquery

# The GDPR delete scope
#   e.g. exampleapi.gdprdelete
GDPR_API_DELETE_SCOPE=exampleapi.gdprdelete

# The address of the GDPR API
#   e.g. http://localhost:8050/gdpr-api/v1/user/$user_uuid
#   The string "$profile_id" will be substituted with the value of PROFILE_ID.
#   The string "$user_uuid" will be substituted with the value of USER_UUID.
#   If there are no substitutions, the PROFILE_ID will be appended to the URL.
GDPR_API_URL=http://localhost:8050/gdpr-api/v1/user/$user_uuid

# The value which will replace the string "$profile_id" in the GDPR_API_URL
#   e.g. 65d4015d-1736-4848-9466-25d43a1fe8c7
PROFILE_ID=65d4015d-1736-4848-9466-25d43a1fe8c7

# The value for the "sub" claim in the generated API tokens and the value which
# will replace the string "$user_uuid" in the GDPR_API_URL
#   e.g. 9e14df7c-81f6-4c41-8578-6aa7b9d0e5c0
USER_UUID=9e14df7c-81f6-4c41-8578-6aa7b9d0e5c0

# The value for the "loa" (Level of assurance) claim in the generated API tokens
#   e.g. "substantial" or "low"
LOA=substantial

# The value for the "sid" (Session ID) claim in the generated API tokens
SID=00000000-0000-4000-9000-000000000001
